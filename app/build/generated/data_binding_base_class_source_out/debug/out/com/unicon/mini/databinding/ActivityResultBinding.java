// Generated by view binder compiler. Do not edit!
package com.unicon.mini.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.unicon.mini.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityResultBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView ConditionBody;

  @NonNull
  public final View ConditionBodyHR;

  @NonNull
  public final TextView ConditionHead;

  @NonNull
  public final TextView ConstraintsBody;

  @NonNull
  public final View ConstraintsBodyHR;

  @NonNull
  public final TextView ConstraintsHead;

  @NonNull
  public final TextView ConsumedFormBody;

  @NonNull
  public final View ConsumedFormBodyHR;

  @NonNull
  public final TextView ConsumedFormHead;

  @NonNull
  public final TextView EdibleBody;

  @NonNull
  public final View EdibleBodyHR;

  @NonNull
  public final TextView EdibleHead;

  @NonNull
  public final ImageView IVimage;

  @NonNull
  public final TextView MineralsBody;

  @NonNull
  public final View MineralsHR;

  @NonNull
  public final TextView MineralsHead;

  @NonNull
  public final TextView PartsBody;

  @NonNull
  public final View PartsBodyHR;

  @NonNull
  public final TextView PartsHead;

  @NonNull
  public final TextView RegionsBody;

  @NonNull
  public final View RegionsBodyHR;

  @NonNull
  public final TextView RegionsHead;

  @NonNull
  public final TextView SideEffectsBody;

  @NonNull
  public final TextView SideEffectsHead;

  @NonNull
  public final TextView TVAName;

  @NonNull
  public final TextView TVBName;

  @NonNull
  public final TextView cureBody;

  @NonNull
  public final View cureBodyHR;

  @NonNull
  public final TextView cureHead;

  @NonNull
  public final TextView vitaminsBody;

  @NonNull
  public final View vitaminsBodyHR;

  @NonNull
  public final TextView vitaminsHead;

  private ActivityResultBinding(@NonNull LinearLayout rootView, @NonNull TextView ConditionBody,
      @NonNull View ConditionBodyHR, @NonNull TextView ConditionHead,
      @NonNull TextView ConstraintsBody, @NonNull View ConstraintsBodyHR,
      @NonNull TextView ConstraintsHead, @NonNull TextView ConsumedFormBody,
      @NonNull View ConsumedFormBodyHR, @NonNull TextView ConsumedFormHead,
      @NonNull TextView EdibleBody, @NonNull View EdibleBodyHR, @NonNull TextView EdibleHead,
      @NonNull ImageView IVimage, @NonNull TextView MineralsBody, @NonNull View MineralsHR,
      @NonNull TextView MineralsHead, @NonNull TextView PartsBody, @NonNull View PartsBodyHR,
      @NonNull TextView PartsHead, @NonNull TextView RegionsBody, @NonNull View RegionsBodyHR,
      @NonNull TextView RegionsHead, @NonNull TextView SideEffectsBody,
      @NonNull TextView SideEffectsHead, @NonNull TextView TVAName, @NonNull TextView TVBName,
      @NonNull TextView cureBody, @NonNull View cureBodyHR, @NonNull TextView cureHead,
      @NonNull TextView vitaminsBody, @NonNull View vitaminsBodyHR,
      @NonNull TextView vitaminsHead) {
    this.rootView = rootView;
    this.ConditionBody = ConditionBody;
    this.ConditionBodyHR = ConditionBodyHR;
    this.ConditionHead = ConditionHead;
    this.ConstraintsBody = ConstraintsBody;
    this.ConstraintsBodyHR = ConstraintsBodyHR;
    this.ConstraintsHead = ConstraintsHead;
    this.ConsumedFormBody = ConsumedFormBody;
    this.ConsumedFormBodyHR = ConsumedFormBodyHR;
    this.ConsumedFormHead = ConsumedFormHead;
    this.EdibleBody = EdibleBody;
    this.EdibleBodyHR = EdibleBodyHR;
    this.EdibleHead = EdibleHead;
    this.IVimage = IVimage;
    this.MineralsBody = MineralsBody;
    this.MineralsHR = MineralsHR;
    this.MineralsHead = MineralsHead;
    this.PartsBody = PartsBody;
    this.PartsBodyHR = PartsBodyHR;
    this.PartsHead = PartsHead;
    this.RegionsBody = RegionsBody;
    this.RegionsBodyHR = RegionsBodyHR;
    this.RegionsHead = RegionsHead;
    this.SideEffectsBody = SideEffectsBody;
    this.SideEffectsHead = SideEffectsHead;
    this.TVAName = TVAName;
    this.TVBName = TVBName;
    this.cureBody = cureBody;
    this.cureBodyHR = cureBodyHR;
    this.cureHead = cureHead;
    this.vitaminsBody = vitaminsBody;
    this.vitaminsBodyHR = vitaminsBodyHR;
    this.vitaminsHead = vitaminsHead;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityResultBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityResultBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_result, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityResultBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ConditionBody;
      TextView ConditionBody = ViewBindings.findChildViewById(rootView, id);
      if (ConditionBody == null) {
        break missingId;
      }

      id = R.id.ConditionBodyHR;
      View ConditionBodyHR = ViewBindings.findChildViewById(rootView, id);
      if (ConditionBodyHR == null) {
        break missingId;
      }

      id = R.id.ConditionHead;
      TextView ConditionHead = ViewBindings.findChildViewById(rootView, id);
      if (ConditionHead == null) {
        break missingId;
      }

      id = R.id.ConstraintsBody;
      TextView ConstraintsBody = ViewBindings.findChildViewById(rootView, id);
      if (ConstraintsBody == null) {
        break missingId;
      }

      id = R.id.ConstraintsBodyHR;
      View ConstraintsBodyHR = ViewBindings.findChildViewById(rootView, id);
      if (ConstraintsBodyHR == null) {
        break missingId;
      }

      id = R.id.ConstraintsHead;
      TextView ConstraintsHead = ViewBindings.findChildViewById(rootView, id);
      if (ConstraintsHead == null) {
        break missingId;
      }

      id = R.id.ConsumedFormBody;
      TextView ConsumedFormBody = ViewBindings.findChildViewById(rootView, id);
      if (ConsumedFormBody == null) {
        break missingId;
      }

      id = R.id.ConsumedFormBodyHR;
      View ConsumedFormBodyHR = ViewBindings.findChildViewById(rootView, id);
      if (ConsumedFormBodyHR == null) {
        break missingId;
      }

      id = R.id.ConsumedFormHead;
      TextView ConsumedFormHead = ViewBindings.findChildViewById(rootView, id);
      if (ConsumedFormHead == null) {
        break missingId;
      }

      id = R.id.EdibleBody;
      TextView EdibleBody = ViewBindings.findChildViewById(rootView, id);
      if (EdibleBody == null) {
        break missingId;
      }

      id = R.id.EdibleBodyHR;
      View EdibleBodyHR = ViewBindings.findChildViewById(rootView, id);
      if (EdibleBodyHR == null) {
        break missingId;
      }

      id = R.id.EdibleHead;
      TextView EdibleHead = ViewBindings.findChildViewById(rootView, id);
      if (EdibleHead == null) {
        break missingId;
      }

      id = R.id.IVimage;
      ImageView IVimage = ViewBindings.findChildViewById(rootView, id);
      if (IVimage == null) {
        break missingId;
      }

      id = R.id.MineralsBody;
      TextView MineralsBody = ViewBindings.findChildViewById(rootView, id);
      if (MineralsBody == null) {
        break missingId;
      }

      id = R.id.MineralsHR;
      View MineralsHR = ViewBindings.findChildViewById(rootView, id);
      if (MineralsHR == null) {
        break missingId;
      }

      id = R.id.MineralsHead;
      TextView MineralsHead = ViewBindings.findChildViewById(rootView, id);
      if (MineralsHead == null) {
        break missingId;
      }

      id = R.id.PartsBody;
      TextView PartsBody = ViewBindings.findChildViewById(rootView, id);
      if (PartsBody == null) {
        break missingId;
      }

      id = R.id.PartsBodyHR;
      View PartsBodyHR = ViewBindings.findChildViewById(rootView, id);
      if (PartsBodyHR == null) {
        break missingId;
      }

      id = R.id.PartsHead;
      TextView PartsHead = ViewBindings.findChildViewById(rootView, id);
      if (PartsHead == null) {
        break missingId;
      }

      id = R.id.RegionsBody;
      TextView RegionsBody = ViewBindings.findChildViewById(rootView, id);
      if (RegionsBody == null) {
        break missingId;
      }

      id = R.id.RegionsBodyHR;
      View RegionsBodyHR = ViewBindings.findChildViewById(rootView, id);
      if (RegionsBodyHR == null) {
        break missingId;
      }

      id = R.id.RegionsHead;
      TextView RegionsHead = ViewBindings.findChildViewById(rootView, id);
      if (RegionsHead == null) {
        break missingId;
      }

      id = R.id.SideEffectsBody;
      TextView SideEffectsBody = ViewBindings.findChildViewById(rootView, id);
      if (SideEffectsBody == null) {
        break missingId;
      }

      id = R.id.SideEffectsHead;
      TextView SideEffectsHead = ViewBindings.findChildViewById(rootView, id);
      if (SideEffectsHead == null) {
        break missingId;
      }

      id = R.id.TVAName;
      TextView TVAName = ViewBindings.findChildViewById(rootView, id);
      if (TVAName == null) {
        break missingId;
      }

      id = R.id.TVBName;
      TextView TVBName = ViewBindings.findChildViewById(rootView, id);
      if (TVBName == null) {
        break missingId;
      }

      id = R.id.cureBody;
      TextView cureBody = ViewBindings.findChildViewById(rootView, id);
      if (cureBody == null) {
        break missingId;
      }

      id = R.id.cureBodyHR;
      View cureBodyHR = ViewBindings.findChildViewById(rootView, id);
      if (cureBodyHR == null) {
        break missingId;
      }

      id = R.id.cureHead;
      TextView cureHead = ViewBindings.findChildViewById(rootView, id);
      if (cureHead == null) {
        break missingId;
      }

      id = R.id.vitaminsBody;
      TextView vitaminsBody = ViewBindings.findChildViewById(rootView, id);
      if (vitaminsBody == null) {
        break missingId;
      }

      id = R.id.vitaminsBodyHR;
      View vitaminsBodyHR = ViewBindings.findChildViewById(rootView, id);
      if (vitaminsBodyHR == null) {
        break missingId;
      }

      id = R.id.vitaminsHead;
      TextView vitaminsHead = ViewBindings.findChildViewById(rootView, id);
      if (vitaminsHead == null) {
        break missingId;
      }

      return new ActivityResultBinding((LinearLayout) rootView, ConditionBody, ConditionBodyHR,
          ConditionHead, ConstraintsBody, ConstraintsBodyHR, ConstraintsHead, ConsumedFormBody,
          ConsumedFormBodyHR, ConsumedFormHead, EdibleBody, EdibleBodyHR, EdibleHead, IVimage,
          MineralsBody, MineralsHR, MineralsHead, PartsBody, PartsBodyHR, PartsHead, RegionsBody,
          RegionsBodyHR, RegionsHead, SideEffectsBody, SideEffectsHead, TVAName, TVBName, cureBody,
          cureBodyHR, cureHead, vitaminsBody, vitaminsBodyHR, vitaminsHead);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
